/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as ProfileImport } from './routes/profile'
import { Route as Login2Import } from './routes/login2'
import { Route as LoginImport } from './routes/login'
import { Route as CartImport } from './routes/cart'
import { Route as AdminImport } from './routes/admin'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as OrdersUserImport } from './routes/orders.user'
import { Route as OrdersAdminImport } from './routes/orders.admin'
import { Route as AuthSignUpImport } from './routes/auth/sign-up'
import { Route as AuthSignInImport } from './routes/auth/sign-in'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const Login2Route = Login2Import.update({
  path: '/login2',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CartRoute = CartImport.update({
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OrdersUserRoute = OrdersUserImport.update({
  path: '/orders/user',
  getParentRoute: () => rootRoute,
} as any)

const OrdersAdminRoute = OrdersAdminImport.update({
  path: '/orders/admin',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  path: '/auth/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/login2': {
      id: '/login2'
      path: '/login2'
      fullPath: '/login2'
      preLoaderRoute: typeof Login2Import
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof rootRoute
    }
    '/orders/admin': {
      id: '/orders/admin'
      path: '/orders/admin'
      fullPath: '/orders/admin'
      preLoaderRoute: typeof OrdersAdminImport
      parentRoute: typeof rootRoute
    }
    '/orders/user': {
      id: '/orders/user'
      path: '/orders/user'
      fullPath: '/orders/user'
      preLoaderRoute: typeof OrdersUserImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutRoute
  '/admin': typeof AdminRoute
  '/cart': typeof CartRoute
  '/login': typeof LoginRoute
  '/login2': typeof Login2Route
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/orders/admin': typeof OrdersAdminRoute
  '/orders/user': typeof OrdersUserRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutRoute
  '/admin': typeof AdminRoute
  '/cart': typeof CartRoute
  '/login': typeof LoginRoute
  '/login2': typeof Login2Route
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/orders/admin': typeof OrdersAdminRoute
  '/orders/user': typeof OrdersUserRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRoute
  '/admin': typeof AdminRoute
  '/cart': typeof CartRoute
  '/login': typeof LoginRoute
  '/login2': typeof Login2Route
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/orders/admin': typeof OrdersAdminRoute
  '/orders/user': typeof OrdersUserRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/admin'
    | '/cart'
    | '/login'
    | '/login2'
    | '/profile'
    | '/register'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/orders/admin'
    | '/orders/user'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/admin'
    | '/cart'
    | '/login'
    | '/login2'
    | '/profile'
    | '/register'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/orders/admin'
    | '/orders/user'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/admin'
    | '/cart'
    | '/login'
    | '/login2'
    | '/profile'
    | '/register'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/orders/admin'
    | '/orders/user'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRoute
  AdminRoute: typeof AdminRoute
  CartRoute: typeof CartRoute
  LoginRoute: typeof LoginRoute
  Login2Route: typeof Login2Route
  ProfileRoute: typeof ProfileRoute
  RegisterRoute: typeof RegisterRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  OrdersAdminRoute: typeof OrdersAdminRoute
  OrdersUserRoute: typeof OrdersUserRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRoute,
  AdminRoute: AdminRoute,
  CartRoute: CartRoute,
  LoginRoute: LoginRoute,
  Login2Route: Login2Route,
  ProfileRoute: ProfileRoute,
  RegisterRoute: RegisterRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  OrdersAdminRoute: OrdersAdminRoute,
  OrdersUserRoute: OrdersUserRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/admin",
        "/cart",
        "/login",
        "/login2",
        "/profile",
        "/register",
        "/auth/sign-in",
        "/auth/sign-up",
        "/orders/admin",
        "/orders/user"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx"
    },
    "/cart": {
      "filePath": "cart.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/login2": {
      "filePath": "login2.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx"
    },
    "/auth/sign-up": {
      "filePath": "auth/sign-up.tsx"
    },
    "/orders/admin": {
      "filePath": "orders.admin.tsx"
    },
    "/orders/user": {
      "filePath": "orders.user.tsx"
    }
  }
}
ROUTE_MANIFEST_END */

/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as DriverImport } from './routes/driver'
import { Route as CartImport } from './routes/cart'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as UserIndexImport } from './routes/user.index'
import { Route as StoreIndexImport } from './routes/store.index'
import { Route as ExpeditionIndexImport } from './routes/expedition.index'
import { Route as AdminIndexImport } from './routes/admin.index'
import { Route as UserProductsImport } from './routes/user.products'
import { Route as UserOrdersImport } from './routes/user.orders'
import { Route as StoreOrdersImport } from './routes/store.orders'
import { Route as ExpeditionCreateImport } from './routes/expedition.create'
import { Route as AdminProductsImport } from './routes/admin.products'
import { Route as AdminOrdersImport } from './routes/admin.orders'
import { Route as AdminInvoicesImport } from './routes/admin.invoices'
import { Route as AdminCreateImport } from './routes/admin.create'
import { Route as AdminProductsProductIdImport } from './routes/admin.products/$productId'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DriverRoute = DriverImport.update({
  path: '/driver',
  getParentRoute: () => rootRoute,
} as any)

const CartRoute = CartImport.update({
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserIndexRoute = UserIndexImport.update({
  path: '/user/',
  getParentRoute: () => rootRoute,
} as any)

const StoreIndexRoute = StoreIndexImport.update({
  path: '/store/',
  getParentRoute: () => rootRoute,
} as any)

const ExpeditionIndexRoute = ExpeditionIndexImport.update({
  path: '/expedition/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const UserProductsRoute = UserProductsImport.update({
  path: '/user/products',
  getParentRoute: () => rootRoute,
} as any)

const UserOrdersRoute = UserOrdersImport.update({
  path: '/user/orders',
  getParentRoute: () => rootRoute,
} as any)

const StoreOrdersRoute = StoreOrdersImport.update({
  path: '/store/orders',
  getParentRoute: () => rootRoute,
} as any)

const ExpeditionCreateRoute = ExpeditionCreateImport.update({
  path: '/expedition/create',
  getParentRoute: () => rootRoute,
} as any)

const AdminProductsRoute = AdminProductsImport.update({
  path: '/admin/products',
  getParentRoute: () => rootRoute,
} as any)

const AdminOrdersRoute = AdminOrdersImport.update({
  path: '/admin/orders',
  getParentRoute: () => rootRoute,
} as any)

const AdminInvoicesRoute = AdminInvoicesImport.update({
  path: '/admin/invoices',
  getParentRoute: () => rootRoute,
} as any)

const AdminCreateRoute = AdminCreateImport.update({
  path: '/admin/create',
  getParentRoute: () => rootRoute,
} as any)

const AdminProductsProductIdRoute = AdminProductsProductIdImport.update({
  path: '/$productId',
  getParentRoute: () => AdminProductsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/driver': {
      id: '/driver'
      path: '/driver'
      fullPath: '/driver'
      preLoaderRoute: typeof DriverImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/admin/create': {
      id: '/admin/create'
      path: '/admin/create'
      fullPath: '/admin/create'
      preLoaderRoute: typeof AdminCreateImport
      parentRoute: typeof rootRoute
    }
    '/admin/invoices': {
      id: '/admin/invoices'
      path: '/admin/invoices'
      fullPath: '/admin/invoices'
      preLoaderRoute: typeof AdminInvoicesImport
      parentRoute: typeof rootRoute
    }
    '/admin/orders': {
      id: '/admin/orders'
      path: '/admin/orders'
      fullPath: '/admin/orders'
      preLoaderRoute: typeof AdminOrdersImport
      parentRoute: typeof rootRoute
    }
    '/admin/products': {
      id: '/admin/products'
      path: '/admin/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminProductsImport
      parentRoute: typeof rootRoute
    }
    '/expedition/create': {
      id: '/expedition/create'
      path: '/expedition/create'
      fullPath: '/expedition/create'
      preLoaderRoute: typeof ExpeditionCreateImport
      parentRoute: typeof rootRoute
    }
    '/store/orders': {
      id: '/store/orders'
      path: '/store/orders'
      fullPath: '/store/orders'
      preLoaderRoute: typeof StoreOrdersImport
      parentRoute: typeof rootRoute
    }
    '/user/orders': {
      id: '/user/orders'
      path: '/user/orders'
      fullPath: '/user/orders'
      preLoaderRoute: typeof UserOrdersImport
      parentRoute: typeof rootRoute
    }
    '/user/products': {
      id: '/user/products'
      path: '/user/products'
      fullPath: '/user/products'
      preLoaderRoute: typeof UserProductsImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/expedition/': {
      id: '/expedition/'
      path: '/expedition'
      fullPath: '/expedition'
      preLoaderRoute: typeof ExpeditionIndexImport
      parentRoute: typeof rootRoute
    }
    '/store/': {
      id: '/store/'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof StoreIndexImport
      parentRoute: typeof rootRoute
    }
    '/user/': {
      id: '/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/products/$productId': {
      id: '/admin/products/$productId'
      path: '/$productId'
      fullPath: '/admin/products/$productId'
      preLoaderRoute: typeof AdminProductsProductIdImport
      parentRoute: typeof AdminProductsImport
    }
  }
}

// Create and export the route tree

interface AdminProductsRouteChildren {
  AdminProductsProductIdRoute: typeof AdminProductsProductIdRoute
}

const AdminProductsRouteChildren: AdminProductsRouteChildren = {
  AdminProductsProductIdRoute: AdminProductsProductIdRoute,
}

const AdminProductsRouteWithChildren = AdminProductsRoute._addFileChildren(
  AdminProductsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutRoute
  '/cart': typeof CartRoute
  '/driver': typeof DriverRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/admin/create': typeof AdminCreateRoute
  '/admin/invoices': typeof AdminInvoicesRoute
  '/admin/orders': typeof AdminOrdersRoute
  '/admin/products': typeof AdminProductsRouteWithChildren
  '/expedition/create': typeof ExpeditionCreateRoute
  '/store/orders': typeof StoreOrdersRoute
  '/user/orders': typeof UserOrdersRoute
  '/user/products': typeof UserProductsRoute
  '/admin': typeof AdminIndexRoute
  '/expedition': typeof ExpeditionIndexRoute
  '/store': typeof StoreIndexRoute
  '/user': typeof UserIndexRoute
  '/admin/products/$productId': typeof AdminProductsProductIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutRoute
  '/cart': typeof CartRoute
  '/driver': typeof DriverRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/admin/create': typeof AdminCreateRoute
  '/admin/invoices': typeof AdminInvoicesRoute
  '/admin/orders': typeof AdminOrdersRoute
  '/admin/products': typeof AdminProductsRouteWithChildren
  '/expedition/create': typeof ExpeditionCreateRoute
  '/store/orders': typeof StoreOrdersRoute
  '/user/orders': typeof UserOrdersRoute
  '/user/products': typeof UserProductsRoute
  '/admin': typeof AdminIndexRoute
  '/expedition': typeof ExpeditionIndexRoute
  '/store': typeof StoreIndexRoute
  '/user': typeof UserIndexRoute
  '/admin/products/$productId': typeof AdminProductsProductIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRoute
  '/cart': typeof CartRoute
  '/driver': typeof DriverRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/admin/create': typeof AdminCreateRoute
  '/admin/invoices': typeof AdminInvoicesRoute
  '/admin/orders': typeof AdminOrdersRoute
  '/admin/products': typeof AdminProductsRouteWithChildren
  '/expedition/create': typeof ExpeditionCreateRoute
  '/store/orders': typeof StoreOrdersRoute
  '/user/orders': typeof UserOrdersRoute
  '/user/products': typeof UserProductsRoute
  '/admin/': typeof AdminIndexRoute
  '/expedition/': typeof ExpeditionIndexRoute
  '/store/': typeof StoreIndexRoute
  '/user/': typeof UserIndexRoute
  '/admin/products/$productId': typeof AdminProductsProductIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/cart'
    | '/driver'
    | '/login'
    | '/register'
    | '/admin/create'
    | '/admin/invoices'
    | '/admin/orders'
    | '/admin/products'
    | '/expedition/create'
    | '/store/orders'
    | '/user/orders'
    | '/user/products'
    | '/admin'
    | '/expedition'
    | '/store'
    | '/user'
    | '/admin/products/$productId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/cart'
    | '/driver'
    | '/login'
    | '/register'
    | '/admin/create'
    | '/admin/invoices'
    | '/admin/orders'
    | '/admin/products'
    | '/expedition/create'
    | '/store/orders'
    | '/user/orders'
    | '/user/products'
    | '/admin'
    | '/expedition'
    | '/store'
    | '/user'
    | '/admin/products/$productId'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/cart'
    | '/driver'
    | '/login'
    | '/register'
    | '/admin/create'
    | '/admin/invoices'
    | '/admin/orders'
    | '/admin/products'
    | '/expedition/create'
    | '/store/orders'
    | '/user/orders'
    | '/user/products'
    | '/admin/'
    | '/expedition/'
    | '/store/'
    | '/user/'
    | '/admin/products/$productId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRoute
  CartRoute: typeof CartRoute
  DriverRoute: typeof DriverRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  AdminCreateRoute: typeof AdminCreateRoute
  AdminInvoicesRoute: typeof AdminInvoicesRoute
  AdminOrdersRoute: typeof AdminOrdersRoute
  AdminProductsRoute: typeof AdminProductsRouteWithChildren
  ExpeditionCreateRoute: typeof ExpeditionCreateRoute
  StoreOrdersRoute: typeof StoreOrdersRoute
  UserOrdersRoute: typeof UserOrdersRoute
  UserProductsRoute: typeof UserProductsRoute
  AdminIndexRoute: typeof AdminIndexRoute
  ExpeditionIndexRoute: typeof ExpeditionIndexRoute
  StoreIndexRoute: typeof StoreIndexRoute
  UserIndexRoute: typeof UserIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRoute,
  CartRoute: CartRoute,
  DriverRoute: DriverRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  AdminCreateRoute: AdminCreateRoute,
  AdminInvoicesRoute: AdminInvoicesRoute,
  AdminOrdersRoute: AdminOrdersRoute,
  AdminProductsRoute: AdminProductsRouteWithChildren,
  ExpeditionCreateRoute: ExpeditionCreateRoute,
  StoreOrdersRoute: StoreOrdersRoute,
  UserOrdersRoute: UserOrdersRoute,
  UserProductsRoute: UserProductsRoute,
  AdminIndexRoute: AdminIndexRoute,
  ExpeditionIndexRoute: ExpeditionIndexRoute,
  StoreIndexRoute: StoreIndexRoute,
  UserIndexRoute: UserIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/cart",
        "/driver",
        "/login",
        "/register",
        "/admin/create",
        "/admin/invoices",
        "/admin/orders",
        "/admin/products",
        "/expedition/create",
        "/store/orders",
        "/user/orders",
        "/user/products",
        "/admin/",
        "/expedition/",
        "/store/",
        "/user/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx"
    },
    "/cart": {
      "filePath": "cart.tsx"
    },
    "/driver": {
      "filePath": "driver.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/admin/create": {
      "filePath": "admin.create.tsx"
    },
    "/admin/invoices": {
      "filePath": "admin.invoices.tsx"
    },
    "/admin/orders": {
      "filePath": "admin.orders.tsx"
    },
    "/admin/products": {
      "filePath": "admin.products.tsx",
      "children": [
        "/admin/products/$productId"
      ]
    },
    "/expedition/create": {
      "filePath": "expedition.create.tsx"
    },
    "/store/orders": {
      "filePath": "store.orders.tsx"
    },
    "/user/orders": {
      "filePath": "user.orders.tsx"
    },
    "/user/products": {
      "filePath": "user.products.tsx"
    },
    "/admin/": {
      "filePath": "admin.index.tsx"
    },
    "/expedition/": {
      "filePath": "expedition.index.tsx"
    },
    "/store/": {
      "filePath": "store.index.tsx"
    },
    "/user/": {
      "filePath": "user.index.tsx"
    },
    "/admin/products/$productId": {
      "filePath": "admin.products/$productId.tsx",
      "parent": "/admin/products"
    }
  }
}
ROUTE_MANIFEST_END */
